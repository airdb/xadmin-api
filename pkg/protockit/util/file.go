package util

import (
	"fmt"

	"github.com/airdb/xadmin-api/pkg/protockit/version"
	"google.golang.org/protobuf/compiler/protogen"
)

const (
	// PluginName is the name of the AIP Go protobuf compiler plugin.
	PluginName              = "protoc-gen-kit"
	generatedFilenameSuffix = ".pb.kit.go"
)

func NewGeneratedFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {
	g := gen.NewGeneratedFile(file.GeneratedFilenamePrefix+generatedFilenameSuffix, file.GoImportPath)
	g.P("// Code generated by ", PluginName, ". DO NOT EDIT.")
	g.P("//")
	g.P("// versions:")
	g.P("// \t", PluginName, " ", version.PluginVersion)
	g.P("// \tprotoc ", getProtocVersion(gen))
	g.P("// source: ", file.Desc.Path())
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()

	return g
}

func getProtocVersion(gen *protogen.Plugin) string {
	if v := gen.Request.GetCompilerVersion(); v != nil {
		return fmt.Sprintf("v%v.%v.%v", v.GetMajor(), v.GetMinor(), v.GetPatch())
	}
	return "(unknown)"
}
